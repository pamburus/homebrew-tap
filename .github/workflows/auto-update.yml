name: Auto Update Formulas

on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

permissions:
  contents: write
  actions: read

defaults:
  run:
    shell: bash -euxo pipefail {0}

jobs:
  detect-updates:
    name: Detect Updates
    runs-on: ubuntu-latest
    outputs:
      updates: ${{ steps.check.outputs.updates }}
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master

      - name: Check for updates
        id: check
        run: |
          updates="[]"
          for formula in Formula/*.rb; do
            package=$(basename "$formula" .rb)
            for version in $(brew livecheck --quiet --newer-only --json "$package" | jq -r '.[].version.latest // empty'); do
              updates=$(echo "$updates" | jq --arg pkg "$package" --arg ver "$version" '. += [{"package": $pkg, "version": $ver}]')
            done
          done
          echo "updates=$(echo "$updates" | jq -c .)" >> $GITHUB_OUTPUT

  update-formula:
    name: Update Formula
    needs: detect-updates
    if: needs.detect-updates.outputs.updates != '[]'
    strategy:
      matrix:
        update: ${{ fromJson(needs.detect-updates.outputs.updates) }}
        os: [ubuntu-24.04, macos-14, macos-15]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Build bottle
        env:
          PACKAGE: ${{ github.repository }}/${{ matrix.update.package }}
          VERSION: ${{ matrix.update.version }}
        run: |
          brew bump-formula-pr --write-only --version="$VERSION" --no-browse "$PACKAGE"
          brew test-bot --only-cleanup-before
          brew test-bot --only-setup
          brew test-bot --only-formulae --skip-online-checks "$PACKAGE"

      - name: Upload bottles
        uses: actions/upload-artifact@v4
        with:
          name: bottles-${{ matrix.update.package }}-${{ matrix.update.version }}-${{ matrix.os }}
          path: "*.bottle.*"
          retention-days: 1

  integrate-bottles:
    name: Integrate Bottles
    needs: [detect-updates, update-formula]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        update: ${{ fromJson(needs.detect-updates.outputs.updates) }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}
          fetch-depth: 0

      - uses: Homebrew/actions/setup-homebrew@master
      - uses: Homebrew/actions/git-user-config@master

      - name: Download bottles
        uses: actions/download-artifact@v4
        with:
          pattern: bottles-${{ matrix.update.package }}-${{ matrix.update.version }}-*
          path: bottles/
          merge-multiple: true

      - name: Integrate and commit
        env:
          PACKAGE: ${{ matrix.update.package }}
          VERSION: ${{ matrix.update.version }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          mv bottles/*.bottle.* .
          brew bump-formula-pr --write-only --version="$VERSION" --no-browse "${{ github.repository }}/$PACKAGE"
          brew bottle --merge --write --no-commit *.bottle.json
          git add Formula/"$PACKAGE".rb
          git commit -m "$PACKAGE: update to $VERSION"
          git push origin ${{ github.ref_name }}
          gh release create "$PACKAGE-$VERSION" --title "$PACKAGE $VERSION" --notes "Automated release" *.bottle.*
